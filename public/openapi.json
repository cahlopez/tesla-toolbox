{
  "openapi": "3.0.0",
  "info": {
    "title": "NPI Website API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme."
      }
    },
    "schemas": {}
  },
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "Authenticate user and get access token",
        "description": "Sends credentials to the Factory API to validate user and return a JWT token. The token is required for subsequent API calls. Rate limited to 5 attempts per minute.",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@email.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Successfully authenticated and redirected to home page",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "session=encrypted_session_data; HttpOnly; Secure; SameSite=Lax; Path=/"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid username or password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "summary": "Log out the current user",
        "description": "Invalidates the current session by clearing the session cookie and returns a success message.",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged out"
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "session=; HttpOnly; Secure; SameSite=Lax; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/factory/ar/mass-hold": {
      "post": {
        "summary": "Put multiple things on hold in AR containment",
        "description": "Places multiple things on hold in a specified AR containment by importing them as suspects",
        "tags": ["Factory"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["thingNames", "containmentName", "token"],
                "properties": {
                  "thingNames": {
                    "type": "string",
                    "description": "Comma-separated list of thing names to put on hold",
                    "example": "THING001,THING002,THING003"
                  },
                  "containmentName": {
                    "type": "string",
                    "description": "Name of the AR containment",
                    "example": "AR_CONTAINMENT_001"
                  },
                  "token": {
                    "type": "string",
                    "description": "JWT authentication token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Things put on hold successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Thing(s) put on hold successfully"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "successful": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of successfully processed thing names"
                        },
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "thingName": {
                                "type": "string"
                              },
                              "error": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of failed operations with error details"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/factory/flow/get-flow/{slug}": {
      "get": {
        "summary": "Get production flows for a process",
        "description": "Retrieves all production flows for a specified process name",
        "tags": ["Factory"],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Process name to get flows for",
            "example": "PROCESS_001"
          }
        ],
        "responses": {
          "200": {
            "description": "Production flows retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched flows"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "flows": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "description": "Array of production flows"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/factory/flowstep/get-flowstep/{slug}": {
      "get": {
        "summary": "Get active flow steps for a flow",
        "description": "Retrieves all active flow steps for a specified flow name",
        "tags": ["Factory"],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow name to get flow steps for",
            "example": "FLOW_001"
          }
        ],
        "responses": {
          "200": {
            "description": "Active flow steps retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched flowsteps"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "flowSteps": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "description": "Array of active flow steps"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/factory/nonconformance/close": {
      "post": {
        "summary": "Close nonconformances for multiple things",
        "description": "Closes all open nonconformances for specified things with \"NO PROBLEM FOUND\" disposition",
        "tags": ["Factory"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["thingNames", "token"],
                "properties": {
                  "thingNames": {
                    "type": "string",
                    "description": "Comma-separated list of thing names",
                    "example": "THING001,THING002,THING003"
                  },
                  "token": {
                    "type": "string",
                    "description": "JWT authentication token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Nonconformances closed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "NCs closed successfully"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "successful": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of successfully processed thing names"
                        },
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "thingName": {
                                "type": "string"
                              },
                              "error": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of failed operations with error details"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/factory/part/get-process/{slug}": {
      "get": {
        "summary": "Get process options for a thing's part number",
        "description": "Retrieves available process options for a thing based on its part number",
        "tags": ["Factory"],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Thing name to get process options for",
            "example": "THING001"
          }
        ],
        "responses": {
          "200": {
            "description": "Process options retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched process"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "process": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "Process name"
                              },
                              "value": {
                                "type": "string",
                                "description": "Process ID"
                              }
                            }
                          },
                          "description": "Array of available process options"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/factory/process/get-process/{slug}": {
      "get": {
        "summary": "Get non-production flows for a process",
        "description": "Retrieves all non-production flows for a specified process name",
        "tags": ["Factory"],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Process name to get flows for",
            "example": "PROCESS_001"
          }
        ],
        "responses": {
          "200": {
            "description": "Non-production flows retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched flows"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "flows": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "description": "Array of non-production flows"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/factory/thing/change-part-number": {
      "post": {
        "summary": "Change part number for one or more things",
        "description": "Changes the part number of specified thing(s) to a given part number",
        "tags": ["Factory"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["partNumber", "thingNames", "token", "username"],
                "properties": {
                  "partNumber": {
                    "type": "string",
                    "description": "Target part number in format 0000000-00-X",
                    "example": "1234567-00-A"
                  },
                  "thingNames": {
                    "type": "string",
                    "description": "Comma-separated list of thing names",
                    "example": "THING001,THING002,THING003"
                  },
                  "token": {
                    "type": "string",
                    "description": "JWT authentication token"
                  },
                  "username": {
                    "type": "string",
                    "description": "Username of the actor performing the action",
                    "example": "user@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Part number changes completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "successful": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "thingName": {
                                "type": "string"
                              },
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to change part numbers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "thingName": {
                                "type": "string"
                              },
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/factory/thing/complete-to-mms": {
      "post": {
        "summary": "Validate thing names for MMS completion",
        "description": "Validates a comma-separated list of thing names for completion to MMS",
        "tags": ["Factory"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["thingNames"],
                "properties": {
                  "thingNames": {
                    "type": "string",
                    "description": "Comma-separated list of thing names to validate",
                    "example": "THING001,THING002,THING003"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Thing names validated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Validation successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "thingNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Array of validated thing names"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/factory/thing/move-to-process": {
      "post": {
        "summary": "Move a thing to a specific process step",
        "description": "Moves a thing to a specified process, flow, and flow step",
        "tags": ["Factory"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "thingName",
                  "processid",
                  "flowid",
                  "flowstepid",
                  "token",
                  "username"
                ],
                "properties": {
                  "thingName": {
                    "type": "string",
                    "description": "Name of the thing to move",
                    "example": "THING001"
                  },
                  "processid": {
                    "type": "string",
                    "description": "Process ID to move the thing to",
                    "example": "PROCESS_001"
                  },
                  "flowid": {
                    "type": "string",
                    "description": "Flow ID within the process",
                    "example": "FLOW_001"
                  },
                  "flowstepid": {
                    "type": "string",
                    "description": "Flow step ID within the flow",
                    "example": "STEP_001"
                  },
                  "token": {
                    "type": "string",
                    "description": "JWT authentication token"
                  },
                  "username": {
                    "type": "string",
                    "description": "Username of the actor performing the action",
                    "example": "user@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Thing moved to process successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Thing entered process successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/openapi": {
      "get": {
        "summary": "Get OpenAPI specification",
        "description": "Returns the OpenAPI specification file for the API documentation",
        "tags": ["Documentation"],
        "responses": {
          "200": {
            "description": "OpenAPI specification returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "OpenAPI specification object"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}
